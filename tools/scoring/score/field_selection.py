# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the License);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an AS IS BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# Field Selection/Rejection

# Participants are expected to reject fields that are unimportant, as defined by the fact they are not included in canonical types.  To score this ability, all raw->canonical field mappings in the non-autogenerated entities from the solution set are matched against the participant result.

# Fields on non-canonically typed entities are skipped.

# Raw fields with multiple mappings will only count once

#  (number of correctly identified fields) - (number of extra result fields) total solution fields

# Participants will score a point for each raw field correctly marked as "important" (as defined by it being in an entity configuration) and lose a point for each extra point considered unimportant.

# For the purposes of deeper analysis of the result, success for fields from virtual devices should be separable from those of reporting devices.  Intermediate field mappings in autogenerated devices should be ignored.

from score.score import Score


class FieldSelection(Score):
    def __init__(self):
        return False
